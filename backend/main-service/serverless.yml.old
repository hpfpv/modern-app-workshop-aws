service: mythicalmysfits-serverless
frameworkVersion: '2'

package:
  patterns:
    - '!./**'
    - getmysfits.py
    - getmysfit.py
    - likemysfit.py
    - adoptmysfit.py

plugins:
  - serverless-stack-output

custom:
  output:
    file: outputs/output-mythicalmysfits-app.json

provider:
  name: aws
  runtime: python3.8
  profile: serverless
  lambdaHashingVersion: 20201221
  environment:
    DOMAIN_SUFFIX: mythicalmysfits-houessou-com
  iamRoleStatements:
    - Effect: Allow
      Action: dynamodb:*
      Resource: 
        - arn:aws:dynamodb:*:601091111123:table/MysfitsTable
        - arn:aws:dynamodb:*:601091111123:table/MysfitsTable/index/*
  httpApi:
    cors: true
    authorizers:
      MysfitsAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl: 
          Fn::Join:
          - ''
          - - 'https://cognito-idp.'
            - '${opt:region, self:provider.region}'
            - '.amazonaws.com/'
            - Ref: MysfitsUserPool
        audience:
          - Ref: MysfitsUserPoolClient

functions:
  getmysfits:
    handler: getmysfits.lambda_handler
    events:
      - httpApi:
          path: /mysfits
          method: GET

  getmysfit:
    handler: getmysfit.lambda_handler
    events:
      - httpApi:
          path: /mysfits/{mysfitId}
          method: GET

  likemysfit:
    handler: likemysfit.lambda_handler
    events:
      - httpApi:
          path: /mysfits/{mysfitId}/like
          method: POST
          authorizer: MysfitsAuthorizer

  adoptmysfit:
    handler: adoptmysfit.lambda_handler
    events:
      - httpApi:
          path: /mysfits/{mysfitId}/adopt
          method: POST
          authorizer: MysfitsAuthorizer


# Resources to be created with CloudFormation            
resources:
  Resources:
    HttpApi:
      DependsOn: MysfitsUserPool
    # Cognito user pool for authentication
    MysfitsUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: MysfitsUserPoolServerless-${opt:stage, self:provider.stage}
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
    # Cognito user pool client
    MysfitsUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: MysfitsUserPoolServerlessClient-${opt:stage, self:provider.stage}
        AllowedOAuthFlows:
          - implicit
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthScopes:
          - phone
          - email
          - openid
          - profile
          - aws.cognito.signin.user.admin
        UserPoolId:
          Ref: MysfitsUserPool
        CallbackURLs: 
          - https://mythicalmysfits.houessou.com
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: false
        SupportedIdentityProviders: 
          - COGNITO
    # Cognito user pool domain
    MysfitsUserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain 
      Properties:
        UserPoolId: !Ref MysfitsUserPool
        Domain: auth-mythicalmysfits-houessou-com
    
  Outputs:
    MysfitsUserPool:
      Value: !Ref MysfitsUserPool
    MysfitsUserPoolClient:
      Value: MysfitsUserPoolClient
