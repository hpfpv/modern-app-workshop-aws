AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: MythicalMysfits users questions service 

Globals:
  Function:
    Timeout: 5
    Runtime: python3.8

Resources:
  QuestionsHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: dev
      Auth:
        Authorizers:
          MysfitsAuthorizer:
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              issuer: 
                - !Join
                - ''
                - - 'https://cognito-idp.'
                  - !Ref "AWS::Region"
                  - '.amazonaws.com/' 
                  - !ImportValue
                    'Fn::Sub': '${mythicalmysfits-main-service-stack}-MysfitsUserPool'
              audience: 
                - !ImportValue 
                  'Fn::Sub': "${mythicalmysfits-main-service-stack}-MysfitsUserPoolClient"
        DefaultAuthorizer: MysfitsAuthorizer
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
        AllowOrigins:
          - https://mythicalmysfits.houessou.com
        AllowHeaders: 
          - '*'
              
  postquestions:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          MYSFITS_QUESTIONS_TABLE: !Ref MysfitsQuestionsTable
      CodeUri: ./functions
      Handler: postquestions.lambda_handler
      Events:
        postquestionsApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref QuestionsHttpApi
            Path: /question
            Method: POST
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: 'dynamodb:put*'
              Resource:
                - !GetAtt 'MysfitsQuestionsTable.Arn'
                   
  publishquestion:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          TOPIC_ARN: !GetAtt 'MythicalMysfitsQuestionsTopic.TopicArn'
      CodeUri: ./functions
      Handler: publishquestion.lambda_handler
      Events:
        publishquestionStream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt MysfitsQuestionsTable.StreamArn
            BatchSize: 1
            StartingPosition: TRIM_HORIZON
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: 'sns:Publish'
              Resource:
                - !Join [ '', [ 'arn:aws:sns:', !Ref 'AWS::Region', ':', !Ref: 'AWS::AccountId', ':', !Ref MythicalMysfitsQuestionsTopic ] ]
                    
 # dynamoDB table to store mysfits questions
  MysfitsQuestionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "MysfitsQuestionsTable"
      BillingMode: PROVISIONED
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      AttributeDefinitions:
        - AttributeName: "QuestionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "QuestionId"
          KeyType: "HASH"
      StreamSpecification:
        StreamViewType: "NEW_IMAGE"

  # SNS Topic where new questions will be sent so that
  # administrators can receive an email regarding the newly posted question.
  MysfitsQuestionsTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: MysfitsQuestionsTopic
      Subscription:
        - Endpoint: 
            - "pif92@hotmail.com"
          Protocol: email
      TopicName: MysfitsQuestionsTopic

Outputs:
  QuestionsHttpApi:
    Value: !Join [ '', ['https://', !Ref QuestionsHttpApi, '.execute-api.us-east-1.amazonaws.com/dev'] ]
  MythicalMysfitsQuestionsTopicArn:
    Value: !GetAtt 'MysfitsQuestionsTopic.TopicArn'
  MysfitsQuestionsTable:
    Value: !Ref MysfitsQuestionsTable