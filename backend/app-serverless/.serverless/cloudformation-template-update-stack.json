{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "GetmysfitsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/mythicalmysfits-serverless-dev-getmysfits"
      }
    },
    "GetmysfitLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/mythicalmysfits-serverless-dev-getmysfit"
      }
    },
    "LikemysfitLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/mythicalmysfits-serverless-dev-likemysfit"
      }
    },
    "AdoptmysfitLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/mythicalmysfits-serverless-dev-adoptmysfit"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "mythicalmysfits-serverless",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mythicalmysfits-serverless-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mythicalmysfits-serverless-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:*:601091111123:table/MysfitsTable",
                    "arn:aws:dynamodb:*:601091111123:table/MysfitsTable/index/*"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "mythicalmysfits-serverless",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "GetmysfitsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/mythicalmysfits-serverless/dev/1624801770244-2021-06-27T13:49:30.244Z/mythicalmysfits-serverless.zip"
        },
        "Handler": "getmysfits.lambda_handler",
        "Runtime": "python3.8",
        "FunctionName": "mythicalmysfits-serverless-dev-getmysfits",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DOMAIN_SUFFIX": "mythicalmysfits-houessou-com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetmysfitsLogGroup"
      ]
    },
    "GetmysfitLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/mythicalmysfits-serverless/dev/1624801770244-2021-06-27T13:49:30.244Z/mythicalmysfits-serverless.zip"
        },
        "Handler": "getmysfit.lambda_handler",
        "Runtime": "python3.8",
        "FunctionName": "mythicalmysfits-serverless-dev-getmysfit",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DOMAIN_SUFFIX": "mythicalmysfits-houessou-com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetmysfitLogGroup"
      ]
    },
    "LikemysfitLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/mythicalmysfits-serverless/dev/1624801770244-2021-06-27T13:49:30.244Z/mythicalmysfits-serverless.zip"
        },
        "Handler": "likemysfit.lambda_handler",
        "Runtime": "python3.8",
        "FunctionName": "mythicalmysfits-serverless-dev-likemysfit",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DOMAIN_SUFFIX": "mythicalmysfits-houessou-com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LikemysfitLogGroup"
      ]
    },
    "AdoptmysfitLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/mythicalmysfits-serverless/dev/1624801770244-2021-06-27T13:49:30.244Z/mythicalmysfits-serverless.zip"
        },
        "Handler": "adoptmysfit.lambda_handler",
        "Runtime": "python3.8",
        "FunctionName": "mythicalmysfits-serverless-dev-adoptmysfit",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DOMAIN_SUFFIX": "mythicalmysfits-houessou-com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AdoptmysfitLogGroup"
      ]
    },
    "GetmysfitsLambdaVersionxtXgvS7E4Q9DOXgfxSbAjQnrQqZ1o2thsTMshLbP4M": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetmysfitsLambdaFunction"
        },
        "CodeSha256": "4qPu24H/VIkB8gIhCWFCfcXqmkIKcHEDEulNYblldE0="
      }
    },
    "GetmysfitLambdaVersionUx5DwzcCOm7Z3Iusg7eCFsrmc7HMHhcVrHzIEbnJIA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetmysfitLambdaFunction"
        },
        "CodeSha256": "4qPu24H/VIkB8gIhCWFCfcXqmkIKcHEDEulNYblldE0="
      }
    },
    "LikemysfitLambdaVersionLUWP7zPXMY5Neb8AVezpRsslo6CMIK15LBvjE4v93U": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LikemysfitLambdaFunction"
        },
        "CodeSha256": "4qPu24H/VIkB8gIhCWFCfcXqmkIKcHEDEulNYblldE0="
      }
    },
    "AdoptmysfitLambdaVersionVp0BomjvyIrhpt02uNzhJSbuEfi1mkxQw4hC9rlWqc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AdoptmysfitLambdaFunction"
        },
        "CodeSha256": "4qPu24H/VIkB8gIhCWFCfcXqmkIKcHEDEulNYblldE0="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-mythicalmysfits-serverless",
        "ProtocolType": "HTTP",
        "CorsConfiguration": {
          "AllowHeaders": [
            "Content-Type",
            "X-Amz-Date",
            "Authorization",
            "X-Api-Key",
            "X-Amz-Security-Token",
            "X-Amz-User-Agent"
          ],
          "AllowMethods": [
            "OPTIONS",
            "GET",
            "POST"
          ],
          "AllowOrigins": [
            "*"
          ]
        }
      },
      "DependsOn": [
        "MysfitsUserPool"
      ]
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "HttpApiAuthorizerMysfitsAuthorizer": {
      "Type": "AWS::ApiGatewayV2::Authorizer",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "Name": "MysfitsAuthorizer",
        "IdentitySource": [
          "$request.header.Authorization"
        ],
        "AuthorizerType": "JWT",
        "JwtConfiguration": {
          "Audience": [
            {
              "Ref": "MysfitsUserPoolClient"
            }
          ],
          "Issuer": {
            "Fn::Join": [
              "",
              [
                "https://cognito-idp.",
                "us-east-1",
                ".amazonaws.com/",
                {
                  "Ref": "MysfitsUserPool"
                }
              ]
            ]
          }
        }
      }
    },
    "GetmysfitsLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetmysfitsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetmysfits": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetmysfitsLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRouteGetMysfits": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /mysfits",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetmysfits"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetmysfits"
    },
    "GetmysfitLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetmysfitLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetmysfit": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetmysfitLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRouteGetMysfitsMysfitidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /mysfits/{mysfitId}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetmysfit"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetmysfit"
    },
    "LikemysfitLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LikemysfitLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationLikemysfit": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "LikemysfitLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRoutePostMysfitsMysfitidVarLike": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /mysfits/{mysfitId}/like",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationLikemysfit"
              }
            ]
          ]
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": {
          "Ref": "HttpApiAuthorizerMysfitsAuthorizer"
        }
      },
      "DependsOn": "HttpApiIntegrationLikemysfit"
    },
    "AdoptmysfitLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AdoptmysfitLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationAdoptmysfit": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "AdoptmysfitLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRoutePostMysfitsMysfitidVarAdopt": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /mysfits/{mysfitId}/adopt",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationAdoptmysfit"
              }
            ]
          ]
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": {
          "Ref": "HttpApiAuthorizerMysfitsAuthorizer"
        }
      },
      "DependsOn": "HttpApiIntegrationAdoptmysfit"
    },
    "MysfitsUserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "UserPoolName": "MysfitsUserPoolServerless-dev",
        "UsernameAttributes": [
          "email"
        ],
        "AutoVerifiedAttributes": [
          "email"
        ]
      }
    },
    "MysfitsUserPoolClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "ClientName": "MysfitsUserPoolServerlessClient-dev",
        "AllowedOAuthFlows": [
          "implicit"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "phone",
          "email",
          "openid",
          "profile",
          "aws.cognito.signin.user.admin"
        ],
        "UserPoolId": {
          "Ref": "MysfitsUserPool"
        },
        "CallbackURLs": [
          "https://mythicalmysfits.houessou.com"
        ],
        "ExplicitAuthFlows": [
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "GenerateSecret": false,
        "SupportedIdentityProviders": [
          "COGNITO"
        ]
      }
    },
    "MysfitsUserPoolDomain": {
      "Type": "AWS::Cognito::UserPoolDomain",
      "Properties": {
        "UserPoolId": {
          "Ref": "MysfitsUserPool"
        },
        "Domain": "auth.mythicalmysfits.houessou.com",
        "CustomDomainConfig": {
          "CertificateArn": "arn:aws:acm:us-east-1:601091111123:certificate/3ca5c12d-3d79-4d96-a91f-0e9b38477474"
        }
      }
    },
    "MysfitsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "MysfitsTableServerless",
        "BillingMode": "PROVISIONED",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "MysfitId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "GoodEvil",
            "AttributeType": "S"
          },
          {
            "AttributeName": "LawChaos",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "MysfitId",
            "KeyType": "HASH"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "LawChaosIndex",
            "KeySchema": [
              {
                "AttributeName": "LawChaos",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "MysfitId",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          },
          {
            "IndexName": "GoodEvilIndex",
            "KeySchema": [
              {
                "AttributeName": "GoodEvil",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "MysfitId",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          }
        ]
      }
    },
    "MysfitsBucketWeb": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "hpf-mythicalmysfits-web",
        "WebsiteConfiguration": {
          "IndexDocument": "index.html"
        }
      }
    },
    "ReadPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "MysfitsBucketWeb"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:s3:::${MysfitsBucketWeb}/*"
              },
              "Principal": "*"
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-mythicalmysfits-serverless-dev-ServerlessDeploymentBucketName"
      }
    },
    "GetmysfitsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetmysfitsLambdaVersionxtXgvS7E4Q9DOXgfxSbAjQnrQqZ1o2thsTMshLbP4M"
      },
      "Export": {
        "Name": "sls-mythicalmysfits-serverless-dev-GetmysfitsLambdaFunctionQualifiedArn"
      }
    },
    "GetmysfitLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetmysfitLambdaVersionUx5DwzcCOm7Z3Iusg7eCFsrmc7HMHhcVrHzIEbnJIA"
      },
      "Export": {
        "Name": "sls-mythicalmysfits-serverless-dev-GetmysfitLambdaFunctionQualifiedArn"
      }
    },
    "LikemysfitLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LikemysfitLambdaVersionLUWP7zPXMY5Neb8AVezpRsslo6CMIK15LBvjE4v93U"
      },
      "Export": {
        "Name": "sls-mythicalmysfits-serverless-dev-LikemysfitLambdaFunctionQualifiedArn"
      }
    },
    "AdoptmysfitLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AdoptmysfitLambdaVersionVp0BomjvyIrhpt02uNzhJSbuEfi1mkxQw4hC9rlWqc"
      },
      "Export": {
        "Name": "sls-mythicalmysfits-serverless-dev-AdoptmysfitLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-mythicalmysfits-serverless-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-mythicalmysfits-serverless-dev-HttpApiUrl"
      }
    }
  }
}