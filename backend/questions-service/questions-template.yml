AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: MythicalMysfits users questions service 

Resources:
  QuestionsApi:
    Type: AWS::Serverless::Api
    DependsOn: MysfitsUserPool
    Properties:
      StageName: dev
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: MysfitsAuthorizer
        Authorizers:
          MysfitsAuthorizer:
            UserPoolArn: 
              Fn::ImportValue: !Sub "${mythicalmysfits-main-service-stack}-MysfitsUserPoolArn"

  postquestions:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          MYSFITS_QUESTIONS_TABLE: !Ref MysfitsQuestionsTable
      CodeUri: ./functions
      Handler: postquestions.lambda_handler
      Runtime: python3.8
      Events:
        postquestionsApi:
          Type: Api
          Properties:
            RestApiId: !Ref QuestionsApi
            Path: /question
            Method: POST
      Policies:
        - PolicyName: mythicalmysfits-questions-postquestions-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'dynamodb:put*'
                Resource:
                  - !GetAtt 'MysfitsQuestionsTable.Arn'
                   
  publishquestion:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          TOPIC_ARN: !GetAtt 'MythicalMysfitsQuestionsTopic.TopicArn'
      CodeUri: ./functions
      Handler: publishquestion.lambda_handler
      Runtime: python3.8
      Events:
        publishquestionStream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt MysfitsQuestionsTable.StreamArn
            BatchSize: 1
            StartingPosition: TRIM_HORIZON
      Policies:
        - PolicyName: mythicalmysfits-questions-publishquestion-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'sns:Publish'
                Resource:
                  - !Join [ '', [ 'arn:aws:sns:', !Ref 'AWS::Region', ':', !Ref: 'AWS::AccountId', ':', !Ref MythicalMysfitsQuestionsTopic ] ]
                    
 # dynamoDB table to store mysfits questions
  MysfitsQuestionsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: "MysfitsQuestionsTable"
      AttributeDefinitions:
        - AttributeName: "QuestionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "QuestionId"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: "NEW_IMAGE"
  # SNS Topic where new questions will be sent so that
  # administrators can receive an email regarding the newly posted question.
  MythicalMysfitsQuestionsTopic:
    Type: "AWS::SNS::Topic"
    Properties: 
      DisplayName: MythicalMysfitsQuestionsTopic
      Subscription:
        - Endpoint: 
            Ref: "pif92@hotmail.com"
          Protocol: email
      TopicName: MythicalMysfitsQuestionsTopic

  Outputs:
    MythicalMysfitsQuestionsTopicArn:
      Value: !GetAtt 'MythicalMysfitsQuestionsTopic.TopicArn'
    MysfitsQuestionsTable:
      Value: MysfitsQuestionsTable